# JDBC 설정
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.username=SPRING_BOOT
spring.datasource.password=1234
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

# JSP 경로 추가
# spring.mvc.view.prefix=/WEB-INF/views/
# spring.mvc.view.suffix=.jsp

# MyBatis 설정
mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:com/example/demo/**/dao/mapper/*.xml

# 파일업로드 설정
# 사용자 정의 프로퍼티(Spring Boot 설정과는 관련 없음)
app.multipart.base-dir=C:/uploadfiles
# 파일명 난독화 설정
app.multipart.obfuscation.enable=true
# 파일 확장자 가릴 것 인지 설정
app.multipart.obfuscation.hide-ext.enable=true

# 스프링 파일 업로드 설정
# 최대업로드 파일 크기 설정 (100MB)
spring.servlet.multipart.max-file-size=104857600
# 요청당 최대업로드 파일 크기 설정 (10MB)
spring.servlet.multipart.max-request-size=10485760

# JWT 관련 정보 세팅
jwt.issuer=mcjang1116@gmail.com
jwt.secret-key=spring-security-secret-key-random-token-key

# Naver OAuth 설정 값
spring.security.oauth2.client.registration.naver.client-id=D08piAzFGf1N3XT9z0Sp
spring.security.oauth2.client.registration.naver.client-secret=tbRfIwKSZM

# Naver Spring Security 수동 입력
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# Security의 기준이 되는 username의 이름을 네이버에서는 response로 (회원 조회시 반환되는 JSON 형태 때문)
spring.security.oauth2.client.provider.naver.user-name-attribute=response


# Google OAuth 설정 값
spring.security.oauth2.client.registration.google.client-id=719768550358-nqks7icl8eg65n8e1ueecgf1u6v61737.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email